const values = [
  +1.00000000000000000000000000000000000,
  +1.66666666666666666666666666666666667e-1,
  -3.33333333333333333333333333333333333e-2,
  +2.38095238095238095238095238095238095e-2,
  -3.33333333333333333333333333333333333e-2,
  +7.57575757575757575757575757575757576e-2,
  -2.53113553113553113553113553113553114e-1,
  +1.16666666666666666666666666666666667e+0,
  -7.09215686274509803921568627450980392e+0,
  +5.49711779448621553884711779448621554e+1,
  -5.29124242424242424242424242424242424e+2,
  +6.19212318840579710144927536231884058e+3,
  -8.65802531135531135531135531135531136e+4,
  +1.42551716666666666666666666666666667e+6,
  -2.72982310678160919540229885057471264e+7,
  +6.01580873900642368384303868174835917e+8,
  -1.51163157670921568627450980392156863e+10,
  +4.29614643061166666666666666666666667e+11,
  -1.37116552050883327721590879485616328e+13,
  +4.88332318973593166666666666666666667e+14,
  -1.92965793419400681486326681448632668e+16,
  +8.41693047573682615000553709856035437e+17,
  -4.03380718540594554130768115942028986e+19,
  +2.11507486380819916056014539007092199e+21,
  -1.20866265222965259346027311937082525e+23,
  +7.50086674607696436685572007575757576e+24,
  -5.03877810148106891413789303052201258e+26,
  +3.65287764848181233351104308429711779e+28,
  -2.84987693024508822262691464329106782e+30,
  +2.38654274996836276446459819192192150e+32,
  -2.13999492572253336658107447651910974e+34,
  +2.05009757234780975699217330956723103e+36,
  -2.09380059113463784090951852900279702e+38,
  +2.27526964884635155596492603527692646e+40,
  -2.62577102862395760473030497361582021e+42,
  +3.21250821027180325182047923042649852e+44,
  -4.15982781667947109139170744952623589e+46,
  +5.69206954820352800238834562191210586e+48,
  -8.21836294197845756922906534686173330e+50,
  +1.25029043271669930167323398297028955e+53,
  -2.00155832332483702749253291988132988e+55,
  +3.36749829153643742333966769033387530e+57,
  -5.94709705031354477186604968440515408e+59,
  +1.10119103236279775595641307904376916e+62,
  -2.13552595452535011886583850190410657e+64,
  +4.33288969866411924196166130593792062e+66,
  -9.18855282416693282262005552155018971e+68,
  +2.03468967763290744934550279902200201e+71,
  -4.70038339580357310785752555350060607e+73,
  +1.13180434454842492706751862577339343e+76,
  -2.83822495706937069592641563364817647e+78,
  +7.40642489796788506297508271409209842e+80,
  -2.00964548027566044834656196727153632e+83,
  +5.66571700508059414457193460305193570e+85,
  -1.65845111541362169158237133743199123e+88,
  +5.03688599504923774192894219151801548e+90,
  -1.58614682376581863693634015729664388e+93,
  +5.17567436175456269840732406825071226e+95,
  -1.74889218402171173396900258776181591e+98,
  +6.11605199949521852558245252642641678e+100,
  -2.21227769127078349422883234567129324e+103,
  +8.27227767987709698542210624599845957e+105,
  -3.19589251114157095835916343691808149e+108,
  +1.27500822233877929823100243029266799e+111,
  -5.25009230867741338994028246245651754e+113,
  +2.23018178942416252098692981988387281e+116,
  -9.76845219309552044386335133989802393e+118,
  +4.40983619784529542722726228748131692e+121,
  -2.05085708864640888397293377275830155e+124,
  +9.82144332797912771075729696020975210e+126,
  -4.84126007982088805087891967099634128e+129,
  +2.45530888014809826097834674040886904e+132,
  -1.28069268040847475487825132786017857e+135,
  +6.86761671046685811921018885984644004e+137,
  -3.78464685819691046949789954163795568e+140,
  +2.14261012506652915508713231351482721e+143,
  -1.24567271371836950070196429616376072e+146,
  +7.43457875510001525436796683940520613e+148,
  -4.55357953046417048940633332233212749e+151,
  +2.86121128168588683453638472510172325e+154,
  -1.84377235520338697276882026536287855e+157,
  +1.21811545362210466995013165065995214e+160,
  -8.24821871853141215484818457296893447e+162,
  +5.72258779378329433296516498142978616e+165,
  -4.06685305250591047267679693831158656e+168,
  +2.95960920646420500628752695815851870e+171,
  -2.20495225651894575090311752273445985e+174,
  +1.68125970728895998058311525151360666e+177,
  -1.31167362135569576486452806355817153e+180,
  +1.04678940094780380821832853929823090e+183,
  -8.54328935788337077185982546299082775e+185,
  +7.12878213224865423522884066771438225e+188,
  -6.08029314555358993000847118686477458e+191,
  +5.29967764248499239300942910043247266e+194,
  -4.71942591687458626443646229013379911e+197,
  +4.29284137914029810894168296541074669e+200,
  -3.98767449682322074434477655542938795e+203,
  +3.78197804193588827138944181161393328e+206,
  -3.66142336836811912436858082151197349e+209,
  +3.61760902723728623488554609298914089e+212,
  -3.64707726451913543621383088655499449e+215,
  +3.75087554364544090983452410104814189e+218,
  -3.93458672964390282694891288533713429e+221,
  +4.20882111481900820046571171111494898e+224,
  -4.59022962206179186559802940573325591e+227,
  +5.10317257726295759279198185106496769e+230,
  -5.78227623036569554015377271242917143e+233,
  +6.67624821678358810322637794412809363e+236,
  -7.85353076444504163225916259639312444e+239,
  +9.41068940670587255245443288258762485e+242,
  -1.14849338734651839938498599206805593e+246,
  +1.42729587428487856771416320087122500e+249,
  -1.80595595869093090142285728117654561e+252,
  +2.32615353076608052161297985184708876e+255,
  -3.04957517154995947681942819261542594e+258,
  +4.06858060764339734424012124124937319e+261,
  -5.52310313219743616252320044093186392e+264,
  +7.62772793964343924869949690204961216e+267,
  -1.07155711196978863132793524001065397e+271,
  +1.53102008959691884453440916153355334e+274,
  -2.22448916821798346676602348865048511e+277,
  +3.28626791906901391668189736436895275e+280,
  -4.93559289559603449020711938191575963e+283,
  +7.53495712008325067212266049779283957e+286,
  -1.16914851545841777278088924731655042e+290,
  +1.84352614678389394126646201597702232e+293,
  -2.95368261729680829728014917350525183e+296,
  +4.80793212775015697668878704043264072e+299,
  -7.95021250458852528538243631671158693e+302,
  +1.33527841873546338750122832017820518e+306
];

const b1 = -5.000000000000000000000e-1;
const twoPiSquared = 39.4784176043574344753379639995046045;

/**
 * Returns the `n`th bernoulli number, n = 0, 1, 2, ...
 */
export function bernoulliNumber(n: number) {
  let bn: number, m = n >> 1;

  if ((m + m) !== n) return n === 1 ? b1 : 0;
  if (m < values.length) return values[m];
  if (m >= values.length) return m % 2 === 1 ? Infinity : -Infinity;
  m = (n - 260) / 20;
  bn = values[m];
  m = 2 * m + 270;
  if (n >= m) return bnIterateUp(bn, n, m);
  return bnIterateDown(bn, n, m);
}

/**
 * Return array of `length` Bernoulli numbers, in sequence, starting from B[start]
 */
export function bernoulliNumberSequence(start: number, length: number) {
  let x: number, seq: number[] = [];
  for (let n = start; n < start + length; n++) {
    x = bernoulliNumber(n);
    seq.push(x);
  }
  return seq;
}

/**
 * Starting with B[n], iterate up to Bn[m], n < m, using a recursive formula
 */
function bnIterateUp(bn: number, n: number, m: number) {
  for (let k = n + 2; k <= m; k += 2) {
    bn *= -(k * (k - 1));
    bn /= twoPiSquared;
  }
  return bn;
}

/**
 * Starting with B[n], iterate down to Bn[m], n > m, using a recursive formula
 */
function bnIterateDown(bn: number, n: number, m: number) {
  for (let k = n - 2; k >= m; k -= 2) {
    bn *= twoPiSquared;
    bn /= (k + 1) * (k + 2);
  }
  return bn;
}